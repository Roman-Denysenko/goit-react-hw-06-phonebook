{"version":3,"sources":["App.module.css","components/contactList/ContactList.module.css","components/filter/Filter.module.css","components/warning/Warning.module.css","redux/typesActions.js","redux/reducer.js","redux/store.js","components/warning/Warning.js","redux/actions.js","components/contactForm/contactForm.js","components/contactList/contactList.js","components/filter/filter.js","App.js","index.js","components/contactForm/ContactForm.module.css"],"names":["module","exports","reducerContactsItems","createReducer","typesActions","state","payload","filter","id","reducerFilter","_","combineReducers","items","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","rootReducer","devTools","process","persistor","persistStore","Warning","name","className","s","warningContainer","addContact","createAction","deleteContact","ContactForm","number","warning","handleInputName","e","target","value","setState","handleDeleteContactFromFormState","handleSubmitForm","preventDefault","props","contactItem","uuidv4","find","item","onAdd","resetInput","newContactsFromAppState","this","formContainer","CSSTransition","in","timeout","classNames","unmountOnExit","onSubmit","form","label","input","type","onChange","button","Component","defaultProps","connect","dispatch","actions","onDelete","normalizedFilter","toLowerCase","visibleContacts","el","includes","length","TransitionGroup","component","map","onClick","onFilter","container","appear","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.e8ecf633.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3W76r\",\"enter\":\"App_enter__sG2K3\",\"enterActive\":\"App_enterActive__27voE\",\"exit\":\"App_exit__2DVC4\",\"exitActive\":\"App_exitActive__2Tan_\",\"appear\":\"App_appear__prhOB\",\"appearActive\":\"App_appearActive__3UPfd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactList_button__8Dndy\",\"item\":\"ContactList_item__1tTJD\",\"enter\":\"ContactList_enter__1846c\",\"enterActive\":\"ContactList_enterActive__17wQY\",\"exit\":\"ContactList_exit__P7HMj\",\"exitActive\":\"ContactList_exitActive__Maumv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1GSQx\",\"input\":\"Filter_input__2UEn_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"warningContainer\":\"Warning_warningContainer__2Rwwe\"};","const ADD = 'ADD_CONTACT';\r\nconst DELETE = 'DELETE_CONTACT';\r\nconst FILTER = 'FILTER_CONTACTS';\r\n\r\nexport default { ADD, DELETE, FILTER };","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport typesActions from './typesActions';\r\n\r\nconst reducerContactsItems = createReducer([], {\r\n    [typesActions.ADD]: (state, { payload }) => ([...state, payload]),\r\n    [typesActions.DELETE]: (state, { payload }) => (state.filter(({id}) => id !== payload))   \r\n})\r\n\r\nconst reducerFilter = createReducer('', {\r\n    [typesActions.FILTER]: (_, { payload }) =>payload,   \r\n})\r\n\r\nexport default combineReducers({\r\n  items: reducerContactsItems,\r\n  filter: reducerFilter,\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport { persistStore, persistReducer, FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER, } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport rootReducer from './reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst persistConfig = {\r\n  key: 'contacts',\r\n    storage,\r\n  blacklist: ['filter'],\r\n}\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n    contacts: persistReducer(persistConfig, rootReducer),\r\n    },\r\n    middleware,\r\n     devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };","import React from 'react';\r\nimport PropTypes from 'prop-types'; \r\n\r\nimport s from './Warning.module.css';\r\n\r\n\r\nconst Warning = ({ name }) => {\r\n    return (\r\n        <div className={s.warningContainer}>\r\n            <p>{ `${name} is already is contact`}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nWarning.propTypes = {\r\n  name: PropTypes.string,\r\n};\r\n\r\nexport default Warning;","import { createAction } from '@reduxjs/toolkit';\r\nimport typesActions from './typesActions';\r\n\r\nconst addContact = createAction(typesActions.ADD);\r\nconst deleteContact = createAction(typesActions.DELETE);\r\nconst filter = createAction(typesActions.FILTER);\r\n\r\n\r\nexport default { addContact, deleteContact, filter };","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport { CSSTransition } from 'react-transition-group';\nimport Warning from '../warning';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/actions';\n\n\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  static propTypes = {\n    contacts: PropTypes.object,\n    onAdd: PropTypes.func,\n  };\n\n  static defaultProps = {};\n\n  state = {\n    name: '',\n    number: '',\n    warning:false,\n  };\n\n  handleInputName = e => {\n\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n      warning:false});\n    this.handleDeleteContactFromFormState();\n  };\n\n  handleSubmitForm = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const  contacts = this.props.contacts.items;\n    const contactItem = { id: uuidv4(), name, number};\n\n    if (name === '' || number === '') {\n      return;\n    }\n\n    if (contacts.find(item => name === item.name)) {\n      this.setState({warning: true})\n      return;\n    } else {\n      this.setState({\n        warning:false,\n      });\n    }\n    this.props.onAdd(contactItem)\n    this.resetInput();\n  };\n\n  handleDeleteContactFromFormState = () => {\n    const newContactsFromAppState = this.props.contacts.items;\n    this.setState({ contacts: newContactsFromAppState });\n  };\n\n  resetInput = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n  \n    const { name, number,warning } = this.state;\n    return (\n      <div className={s.formContainer}>\n        <CSSTransition in={warning} timeout={250} classNames={s} unmountOnExit>\n           <Warning name={name} />\n        </CSSTransition>  \n      <form onSubmit={this.handleSubmitForm} className={s.form}>\n        <label className={s.label}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleInputName}\n          ></input>\n        </label>\n\n        <label className={s.label}>\n          Number\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleInputName}\n          ></input>\n        </label>\n        <button className={s.button} type=\"submit\">\n          Add contact\n        </button>\n        </form>\n        </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts,\n});\n\nconst mapDispatchToProps = dispatch => ({\n   onAdd: item => dispatch(actions.addContact(item)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm)  ;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../redux/actions';\r\n\r\nimport s from './ContactList.module.css';\r\n\r\n\r\nconst ContactList = ({ contacts, onDelete }) => {\r\n     const {items,filter} = contacts;\r\n    const normalizedFilter = filter.toLowerCase();  \r\n    const visibleContacts = items.filter(el =>\r\n      el.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n  \r\n  if (items.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  const ContactItem = ({ id, name, number }) => {\r\n    if (name === '' || number === '') {\r\n      return null;\r\n    }\r\n    return (\r\n      <CSSTransition key={id} timeout={250} classNames={s}>\r\n        <li  className={s.item}>\r\n        {name}: {number}\r\n        <button\r\n          className={s.button}\r\n          type=\"button\"\r\n          id={id}\r\n          onClick={()=>onDelete(id)}\r\n        >\r\n            Delete\r\n        </button>{' '}\r\n          </li>\r\n      </CSSTransition>\r\n    );\r\n  };\r\n\r\n  return ( \r\n    <TransitionGroup component='ul'>\r\n      {visibleContacts.map(ContactItem)}\r\n    </TransitionGroup>\r\n  )\r\n};\r\n\r\nContactList.propTypes = {\r\n  name: PropTypes.string,\r\n  id: PropTypes.string,\r\n  number: PropTypes.string,\r\n  onDelete: PropTypes.func,\r\n  contacts:PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts,\r\n});\r\n\r\n const mapDispatchToProps = dispatch => ({\r\n   onDelete: (id) => dispatch(actions.deleteContact(id))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList) ;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../redux/actions';\r\n\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter =({value,onFilter })=> {\r\n   \r\n    return (\r\n      <>\r\n        <label className={s.label}>\r\n          Find contact by name\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"filter\"\r\n            value={value}\r\n            onChange={onFilter}\r\n          ></input>\r\n        </label>\r\n      </>\r\n    );\r\n}\r\n  \r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onFilter: PropTypes.func,\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n   onFilter: e=> dispatch(actions.filter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Filter) ;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport s from './App.module.css';\n\nimport ContactForm from './components/contactForm';\nimport ContactList from './components/contactList';\nimport Filter from './components/filter';\n\n\n const App=({items})=>{\n    \n    return (\n      <div className={s.container}>\n        <CSSTransition in={true} appear={true}classNames={s} timeout={500} unmountOnExit>\n          <h1>Phonebook</h1>\n        </CSSTransition>\n\n        <ContactForm />\n\n       <CSSTransition in={items.length>0} timeout={250} classNames={s} unmountOnExit>\n          <div>\n            <h2>Contacts</h2>\n            <Filter />\n        <ContactList\n            />\n            </div>\n          </CSSTransition>\n      </div>\n    );\n  }\n\nApp.propTypes = {\n  items: PropTypes.array,\n};\n\n\nconst mapStateToProps = state => ({\n  items: state.contacts.items,\n});\n\nexport default connect(mapStateToProps)(App);\n\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nimport store from '../src/redux/store';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <App />\r\n        </PersistGate>\r\n      </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__pCDPK\",\"input\":\"ContactForm_input__YPrT-\",\"label\":\"ContactForm_label__Uqtsn\",\"button\":\"ContactForm_button__tqt-5\",\"formContainer\":\"ContactForm_formContainer__3MuTO\",\"enter\":\"ContactForm_enter__157MQ\",\"enterActive\":\"ContactForm_enterActive__33RGi\",\"exit\":\"ContactForm_exit__3LPdj\",\"exitActive\":\"ContactForm_exitActive__1XaHB\"};"],"sourceRoot":""}